[tox]
env_list = lint, type, py38{,-legacy_django}

[testenv]
deps =
    django==3.2.20
    -r test_requirements.txt

[testenv:py38]
description = Run the tests with pytest and coverage
install_command=pip install --only-binary=numpy {opts} numpy {packages}
commands =
    coverage run --source opmon_opendata,opmon_postgresql_maintenance -m pytest opmon_opendata/ opmon_postgresql_maintenance/
    coverage report --include=opmon_opendata/*,opmon_postgresql_maintenance/* --fail-under=60
    coverage html -d ../htmlcov/opendata_module --include=opmon_opendata/*,opmon_postgresql_maintenance/*

[testenv:py38-legacy_django]
description = Run the tests with pytest and coverage for legacy Django
deps =
    django==2.2.28
    -r test_requirements.txt
install_command=pip install --only-binary=numpy {opts} numpy {packages}
commands =
    - coverage run --source opmon_opendata -m pytest opmon_opendata/

[testenv:lint]
description = Run linter
skip_install = true
deps =
     {[testenv]deps}
commands = ruff check

[testenv:type]
description = Run mypy for type checks
deps =
    mypy
    {[testenv]deps}
commands =
    mypy --install-types --non-interactive {toxinidir}/opmon_opendata/api
    mypy --install-types --non-interactive {toxinidir}/opmon_postgresql_maintenance

[pytest]
addopts = --ruff -v --junitxml test_results.xml
DJANGO_SETTINGS_MODULE=opmon_opendata.tests.test_settings
